name: Deploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to deploy"
        required: true
        default: "prod"
        type: choice
        options:
          - prod
          - dev
      is_domain:
        description: "Deploy domain"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Setup google service account
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets[format('GCP_CREDENTIALS_{0}', github.event.inputs.env)] }}

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.env }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.env }}

  deploy_domain:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event.inputs.is_domain == 'true'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Setup google service account
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets[format('GCP_CREDENTIALS_{0}', github.event.inputs.env)] }}

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ github.workspace }}/domain/${{ github.event.inputs.env }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ github.workspace }}/domain/${{ github.event.inputs.env }}
